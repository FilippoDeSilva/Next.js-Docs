name: Download Next.js Docs on Change

on:
  schedule:
    - cron: '0 0 * * *'  # Run every day at midnight UTC
  workflow_dispatch:  # Allows manual triggering too

jobs:
  download-docs:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repo
      uses: actions/checkout@v2

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y httrack curl jq

    - name: Check if website has changed
      id: check_change
      run: |
        # URL of the page you want to monitor
        URL="https://nextjs.org/docs"
        # Path to store the previous hash
        HASH_FILE="docs_hash.txt"

        # Download the current webpage content (HTML)
        curl -s $URL -o current_page.html

        # Create a hash of the current page
        CURRENT_HASH=$(sha256sum current_page.html | awk '{ print $1 }')

        # Check if a previous hash exists
        if [ -f $HASH_FILE ]; then
          # Read the previous hash
          PREVIOUS_HASH=$(cat $HASH_FILE)

          # Compare the hashes
          if [ "$CURRENT_HASH" == "$PREVIOUS_HASH" ]; then
            echo "No changes detected."
            echo "no_changes=true" >> $GITHUB_ENV
          else
            echo "Changes detected."
            echo "no_changes=false" >> $GITHUB_ENV
          fi
        else
          echo "No previous hash found. Running the first download."
          echo "no_changes=false" >> $GITHUB_ENV
        fi

    - name: Run HTTrack if changes detected
      if: env.no_changes == 'false'
      run: |
        httrack https://nextjs.org/docs -O ~/nextjs-docs "+*.nextjs.org/*" -v
        # Save the new hash for future comparison
        sha256sum current_page.html | awk '{ print $1 }' > docs_hash.txt

    - name: Upload downloaded docs as artifact
      if: env.no_changes == 'false'
      uses: actions/upload-artifact@v4
      with:
        name: nextjs-docs
        path: ~/nextjs-docs
