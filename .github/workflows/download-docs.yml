name: Build Next.js Docs PDFs (Optimized)

on:
  schedule:
    - cron: '0 0 * * *' # runs daily at 00:00 UTC
  workflow_dispatch:

jobs:
  build-docs:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y wkhtmltopdf curl tar gzip diffutils

      - name: Install htmlq
        run: |
          curl -L https://github.com/mgdm/htmlq/releases/download/v0.4.0/htmlq-x86_64-linux.tar.gz -o htmlq.tar.gz
          tar -xzf htmlq.tar.gz
          sudo mv htmlq /usr/local/bin/

      - name: Fetch Next.js docs links
        run: |
          mkdir -p docs/stable docs/canary cache/stable cache/canary

          curl -s https://nextjs.org/docs | htmlq -a href a | grep '^/docs/' | sed 's|^|https://nextjs.org|' > stable_links.txt
          curl -s https://nextjs.org/docs/canary | htmlq -a href a | grep '^/docs/' | sed 's|^|https://nextjs.org|' > canary_links.txt

      - name: Download only changed HTML pages
        run: |
          mkdir -p html/stable html/canary
          
          # Function to download & compare
          download_if_changed() {
            url=$1
            folder=$2
            cache_folder=$3
            fname=$(echo $url | sed 's|https://nextjs.org/docs/|docs_|; s|/|_|g')
            
            curl -s $url -o tmp.html
            if [ -f "$cache_folder/$fname.html" ]; then
              if ! diff -q tmp.html "$cache_folder/$fname.html" > /dev/null; then
                echo "Changed: $fname"
                mv tmp.html "$cache_folder/$fname.html"
                cp "$cache_folder/$fname.html" "$folder/$fname.html"
              fi
            else
              mv tmp.html "$cache_folder/$fname.html"
              cp "$cache_folder/$fname.html" "$folder/$fname.html"
            fi
          }

          # Stable docs
          while read url; do
            download_if_changed $url html/stable cache/stable
          done < stable_links.txt

          # Canary docs
          while read url; do
            download_if_changed $url html/canary cache/canary
          done < canary_links.txt

      - name: Build PDFs if changes exist
        run: |
          mkdir -p pdf
          changes=0

          if [ "$(ls -A html/stable)" ]; then
            wkhtmltopdf html/stable/*.html pdf/NextJS-Stable.pdf
            changes=1
          fi

          if [ "$(ls -A html/canary)" ]; then
            wkhtmltopdf html/canary/*.html pdf/NextJS-Canary.pdf
            changes=1
          fi

          echo $changes > pdf_changes.txt

      - name: Commit and push PDFs
        run: |
          changes=$(cat pdf_changes.txt)
          if [ "$changes" -eq "1" ]; then
            git config user.name "github-actions[bot]"
            git config user.email "github-actions[bot]@users.noreply.github.com"
            git add pdf/ cache/
            git commit -m "Update Next.js docs PDFs and cache [skip ci]" || echo "No changes"
            git push
          else
            echo "No changes detected, skipping PDF push."