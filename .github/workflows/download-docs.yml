name: 🧭 Next.js Docs PDF

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          pip install requests beautifulsoup4 weasyprint PyPDF2

      - name: Fetch Docs and Generate PDF in Chunks
        run: |
          python - <<'EOF'
          import requests
          from bs4 import BeautifulSoup
          from weasyprint import HTML, CSS
          from PyPDF2 import PdfMerger
          import os

          BASE_URL = "https://nextjs.org/docs"
          HEADERS = {"User-Agent": "Mozilla/5.0"}
          CHUNK_SIZE = 50

          def get_links():
              html = requests.get(BASE_URL, headers=HEADERS).text
              soup = BeautifulSoup(html, "html.parser")
              links = []
              for a in soup.find_all("a", href=True):
                  href = a["href"]
                  if href.startswith("/docs/") and not any(href.startswith(f"/docs/{v}/") for v in ["13", "14"]):
                      full = f"https://nextjs.org{href}"
                      if full not in links:
                          links.append(full)
              return links

          def fetch_html(url):
              try:
                  return requests.get(url, headers=HEADERS, timeout=10).text
              except Exception as e:
                  print(f"❌ Failed {url}: {e}")
                  return ""

          def render_chunk(pages, chunk_index):
              html = "<hr>".join(pages)
              css = CSS(string="""
                  @page { margin: 1cm; }
                  body { font-family: Arial, sans-serif; color: #222; }
              """)
              filename = f"chunk_{chunk_index:02d}.pdf"
              HTML(string=html, base_url=BASE_URL).write_pdf(filename, stylesheets=[css])
              print(f"✅ Rendered {filename}")

          links = get_links()
          print(f"📄 Found {len(links)} pages.")

          chunk_pages = []
          chunk_index = 0

          for i, link in enumerate(links, 1):
              print(f"({i}/{len(links)}) Fetching {link}")
              html = fetch_html(link)
              chunk_pages.append(html)

              if i % CHUNK_SIZE == 0 or i == len(links):
                  render_chunk(chunk_pages, chunk_index)
                  chunk_pages = []
                  chunk_index += 1

          print("🧩 Merging chunks...")
          merger = PdfMerger()
          for i in range(chunk_index):
              merger.append(f"chunk_{i:02d}.pdf")
          merger.write("NextJS_Latest_Docs.pdf")
          merger.close()
          print("🎉 Final PDF ready!")
          EOF

      - name: Upload Final PDF
        uses: actions/upload-artifact@v4
        with:
          name: nextjs-docs-latest
          path: NextJS_Latest_Docs.pdf
