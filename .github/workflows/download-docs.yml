name: Download Next.js Docs

on:
  schedule:
    - cron: '0 0 * * *'   # midnight UTC daily
  workflow_dispatch:

jobs:
  download_docs:
    runs-on: ubuntu-latest

    env:
      OUTPUT_DIR: ${{ github.workspace }}/nextjs-docs-tmp
      REPO_DOCS_DIR: nextjs-docs
      HASH_FILE: docs_hash.txt
      DOCS_URL: https://nextjs.org/docs
      SITEMAP_URL: https://nextjs.org/sitemap.xml
      BASE_BRANCH: main   # Change if your default branch is 'master'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install HTTrack and Curl
        run: |
          sudo apt-get update
          sudo apt-get install -y httrack curl

      - name: Restore HTTrack cache
        id: cache
        uses: actions/cache@v3
        with:
          path: ${{ env.OUTPUT_DIR }}
          key: httrack-cache-${{ hashFiles('docs_hash.txt') }}
          restore-keys: |
            httrack-cache-

      - name: Prepare directories
        run: |
          mkdir -p "$OUTPUT_DIR"
          mkdir -p "$REPO_DOCS_DIR"

      - name: Check if docs changed
        id: check
        run: |
          NEW_HASH=$(curl -s $SITEMAP_URL | md5sum | cut -d ' ' -f1)
          echo "new_hash=$NEW_HASH" >> $GITHUB_OUTPUT

          if [ -f "$HASH_FILE" ]; then
            OLD_HASH=$(cat "$HASH_FILE")
          else
            OLD_HASH="none"
          fi
          echo "old_hash=$OLD_HASH" >> $GITHUB_OUTPUT

          if [ "$NEW_HASH" == "$OLD_HASH" ]; then
            echo "Docs have not changed. Exiting."
            exit 0
          fi

      - name: Download updated docs (HTTrack)
        if: steps.check.outputs.new_hash != steps.check.outputs.old_hash
        run: |
          httrack $DOCS_URL -O "$OUTPUT_DIR" "+*.nextjs.org/*" -v --clean --mirror --continue

      - name: Save new hash
        if: steps.check.outputs.new_hash != steps.check.outputs.old_hash
        run: echo "${{ steps.check.outputs.new_hash }}" > $HASH_FILE

      - name: Copy docs into repository
        if: steps.check.outputs.new_hash != steps.check.outputs.old_hash
        run: |
          rm -rf "$REPO_DOCS_DIR"/*
          cp -r "$OUTPUT_DIR"/* "$REPO_DOCS_DIR"

      - name: Commit and push changes
        if: steps.check.outputs.new_hash != steps.check.outputs.old_hash
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"

          git fetch origin $BASE_BRANCH
          git checkout -B update-docs origin/$BASE_BRANCH

          git add "$REPO_DOCS_DIR" "$HASH_FILE"
          git commit -m "Update Next.js Docs ($(date +'%Y-%m-%d')) â€” hash: ${{ steps.check.outputs.new_hash }}" || echo "No changes to commit"

          git push -u origin update-docs --force

      - name: Create Pull Request
        if: steps.check.outputs.new_hash != steps.check.outputs.old_hash
        uses: peter-evans/create-pull-request@v6
        with:
          branch: update-docs
          base: ${{ env.BASE_BRANCH }}
          title: "Update Next.js Docs ($(date +'%Y-%m-%d'))"
          body: |
            This PR updates the Next.js docs to the latest version.
            - Previous hash: `${{ steps.check.outputs.old_hash }}`
            - New hash: `${{ steps.check.outputs.new_hash }}`