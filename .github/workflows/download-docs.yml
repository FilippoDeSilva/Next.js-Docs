name: Generate Complete Next.js Docs PDF

on:
  workflow_dispatch:

jobs:
  generate-pdf:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm install puppeteer cheerio axios pdf-merger-js

      - name: Generate PDF from Live Docs (Optimized)
        run: |
          node <<'JS'
          const puppeteer = require('puppeteer');
          const cheerio = require('cheerio');
          const axios = require('axios');
          const PDFMerger = require('pdf-merger-js').default;
          const fs = require('fs');

          const BASE_URL = 'https://nextjs.org/docs';
          const OUTPUT_PDF = 'NextJS_Docs.pdf';

          async function getAllDocPages() {
            const { data: html } = await axios.get(BASE_URL);
            const $ = cheerio.load(html);

            const pages = [];

            // Grab all unique /docs links
            $('a[href^="/docs"]').each((i, el) => {
              const href = $(el).attr('href');
              if (!pages.includes(href)) pages.push(href);
            });

            return pages;
          }

          (async () => {
            const pages = await getAllDocPages();
            console.log('Found', pages.length, 'doc pages');

            const browser = await puppeteer.launch({ args: ['--no-sandbox'] });
            const page = await browser.newPage();
            const merger = new PDFMerger();

            for (const pagePath of pages) {
              const url = 'https://nextjs.org' + pagePath;

              // Fetch HTML and remove unnecessary elements
              const { data: html } = await axios.get(url);
              const $ = cheerio.load(html);
              $('header, footer, nav').remove();

              const tempHtml = `data:text/html,${encodeURIComponent($.html())}`;
              await page.goto(tempHtml, { waitUntil: 'networkidle0' });

              const pdfBuffer = await page.pdf({ format: 'A4', printBackground: true });
              
              // Add PDF buffer directly to merger (no disk write)
              await merger.add(pdfBuffer);
              console.log(`Added ${pagePath} to PDF`);
            }

            await merger.save(OUTPUT_PDF);
            await browser.close();
            console.log('PDF generated:', OUTPUT_PDF);
          })();
          JS

      - name: Commit PDF
        run: |
          git config --local user.name "github-actions"
          git config --local user.email "github-actions@github.com"
          git add NextJS_Docs.pdf
          git commit -m "Update Next.js Docs PDF" || echo "No changes to commit"
          git push