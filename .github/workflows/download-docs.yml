name: 📘 Generate Full Next.js Docs PDF

on:
  workflow_dispatch:
  schedule:
    - cron: "0 3 * * 0" # Every Sunday at 3 AM UTC

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      BASE_URL: https://nextjs.org
      DOCS_PATH: /docs
      PDF_DIR: pdf_output
      FINAL_DIR: docs
      FINAL_PDF: NextJS_Docs_Complete.pdf

    steps:
      - name: 🧩 Checkout repository
        uses: actions/checkout@v4

      - name: ⚙️ Setup Git identity
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "actions@github.com"

      - name: 📦 Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y wget wkhtmltopdf zip

      - name: 🗂️ Create directories
        run: mkdir -p $PDF_DIR $FINAL_DIR

      - name: 🌐 Download all Next.js Docs pages
        run: |
          wget --mirror --convert-links --adjust-extension --page-requisites --no-parent \
          --wait=1 --random-wait -P $PDF_DIR "${BASE_URL}${DOCS_PATH}"
          
          echo "✅ Download completed."

      - name: 🧹 Clean unnecessary sections (Feedback, analytics, etc.)
        run: |
          find $PDF_DIR -type f -name "*.html" -exec sed -i '/Feedback/Id' {} \;
          find $PDF_DIR -type f -name "*.html" -exec sed -i '/<script/Id' {} \;
          echo "✅ Cleanup complete."

      - name: 🧾 Convert all docs HTML files to a single PDF
        run: |
          cd $PDF_DIR
          FILES=$(find . -name "*.html" | sort)
          echo "Found $(echo "$FILES" | wc -l) HTML files."
          wkhtmltopdf $FILES "../${FINAL_DIR}/${FINAL_PDF}"
          echo "✅ PDF generated: ${FINAL_DIR}/${FINAL_PDF}"

      - name: 📦 Compress PDF
        run: |
          zip -j "${FINAL_DIR}/${FINAL_PDF%.pdf}.zip" "${FINAL_DIR}/${FINAL_PDF}"
          echo "✅ ZIP created."

      - name: 📁 Upload as workflow artifact
        uses: actions/upload-artifact@v4
        with:
          name: NextJS-Docs-PDF
          path: |
            ${FINAL_DIR}/${FINAL_PDF}
            ${FINAL_DIR}/${FINAL_PDF%.pdf}.zip

      - name: 🧹 Stash local changes before pull
        run: |
          git add -A
          git stash push -m "temp-stash-before-pull" || echo "No changes to stash"

      - name: 🔄 Pull latest main branch safely
        run: |
          git pull --rebase origin main || echo "No remote changes"
          git stash pop || echo "No stash to apply"

      - name: 🚀 Commit and Push Generated PDF to Main
        run: |
          git add "${FINAL_DIR}/${FINAL_PDF}" "${FINAL_DIR}/${FINAL_PDF%.pdf}.zip"
          git commit -m "📚 Update Next.js Docs (auto-generated full archive)" || echo "No changes"
          git push origin main